import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'application'
    id 'org.beryx.jlink' version '2.26.0'
    id 'org.openjfx.javafxplugin' version '0.0.14'
}

group 'com.codedead'
version '1.1.0'

def currentOS = DefaultNativePlatform.currentOperatingSystem

java {
    targetCompatibility = JavaVersion.VERSION_20
    sourceCompatibility = JavaVersion.VERSION_20
}

application {
    mainModule = 'Opal'
    mainClass = 'com.codedead.opal.OpalApplication'
}

javafx {
    version = '20.0.1'
    configuration = 'implementation'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.media']
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    forceMerge('log4j-api', 'jackson')
    launcher {
        name = 'Opal'
    }

    mergedModule {
        additive = true
        uses 'org.apache.logging.log4j.util.PropertySource'
        uses 'org.apache.logging.log4j.core.util.ContextDataProvider'
        uses 'org.apache.logging.log4j.core.util.WatchEventService'
        uses 'org.apache.logging.log4j.spi.Provider'
        uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory'
    }

    if (currentOS.isWindows()) {
        jpackage {
            installerType = 'msi'
            icon = "${project.rootDir}/.msi/opal.ico"
            installerOptions = [
                    '--win-menu',
                    '--win-menu-group', 'CodeDead',
                    '--win-shortcut-prompt',
                    '--win-upgrade-uuid', '876c5464-9a66-4913-89a4-c63a4b8b4bb9',
                    '--win-help-url', 'https://codedead.com/contact',
                    '--win-dir-chooser',
                    '--copyright', 'Copyright (c) 2023 CodeDead',
                    '--description', 'Opal is a free and open-source JavaFX application that can play relaxing music in the background',
                    '--vendor', 'CodeDead',
                    '--license-file', 'LICENSE',
                    '--app-version', "${project.version.toString()}",
                    '--about-url', 'https://codedead.com'
            ]
        }
    } else if (currentOS.isLinux()) {
        jpackage {
            installerType = 'rpm'
            icon = "${project.rootDir}/src/main/resources/images/opal.png"
            installerOptions = [
                    '--linux-shortcut',
                    '--linux-package-name', 'opal-codedead',
                    '--linux-rpm-license-type', 'GPLv3',
                    '--copyright', 'Copyright (c) 2023 CodeDead',
                    '--description', 'Opal is a free and open-source JavaFX application that can play relaxing music in the background',
                    '--vendor', 'CodeDead',
                    '--license-file', 'LICENSE',
                    '--app-version', "${project.version.toString()}",
                    '--about-url', 'https://codedead.com'
            ]
        }
    } else if (currentOS.isMacOsX()) {
        jpackage {
            installerType = 'dmg'
            icon = "${project.rootDir}/src/main/resources/images/opal.png"
            installerOptions = [
                    '--mac-package-name', 'Opal',
                    '--mac-package-identifier', 'com.codedead.opal',
                    '--mac-app-category', 'public.app-category.music',
                    '--copyright', 'Copyright (c) 2023 CodeDead',
                    '--description', 'Opal is a free and open-source JavaFX application that can play relaxing music in the background',
                    '--vendor', 'CodeDead',
                    '--license-file', 'LICENSE',
                    '--app-version', "${project.version.toString()}",
                    '--about-url', 'https://codedead.com'
            ]
        }
    }
}

tasks.register('AppImage') {
    dependsOn jpackageImage
    doLast {
        copy {
            from '.AppImage/.AppDir'
            into "${buildDir}/AppImage/Opal.AppDir"
        }
        copy {
            from "${buildDir}/jpackage/Opal/"
            into "${buildDir}/AppImage/Opal.AppDir/usr/"
        }
        copy {
            from '.AppImage/.AppDir/Opal.png'
            into "${buildDir}/AppImage/Opal.AppDir/usr/lib"
        }
        exec {
            commandLine 'sh', "${project.rootDir}/.AppImage/createAppImage.sh", "${project.version.toString()}"
        }
        delete "${buildDir}/AppImage/Opal.AppDir"
    }
}

configure(AppImage) {
    group = 'build'
    description = 'Create an AppImage after creating the image of the application'
}

def homeConfig = System.properties['user.home'] + '/.config/com.codedead.opal'
clean.doFirst {
    delete 'default.properties'
    delete 'license.pdf'
    delete 'help.pdf'
    delete 'logs'
    delete '.com.codedead.opal'
    delete "$homeConfig"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

tasks.named('test') {
    useJUnitPlatform()
}
